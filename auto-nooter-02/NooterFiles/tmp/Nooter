RDFILE=uRamdisk
RDPART=/dev/mmcblk1p1
DATAPART=/dev/mmcblk1p6
LOG=/tmp/nooter.log

SYSPART=/dev/mmcblk1p5
NTRB=/dev/mmcblk0p1
NTR=/dev/mmcblk0p2


chmod 4775 /mntsys/bin/su

/system/xbin/sqlite3 /data/data/com.android.providers.settings/databases/settings.db "update secure set value=1 where name='install_non_market_apps'"

cd /mntsys
sed '/nocheckin/d' build.prop > /tmp/build.prop
echo "ro.config.nocheckin=no" >> /tmp/build.prop
sed 's/^.*ro.build.fingerprint.*$/ro\.build\.fingerprint=verizon\/voles\/sholes\/sholes:2\.1-update1\/ESE81\/29593:user\/release-keys/' /tmp/build.prop > build.prop
cp /tmp/build.prop /mntsys/build.prop

cd /mnt/system
sed '1,/uid.system/!{ /<perms>/,/uid.system/!d; }' packages.xml > /tmp/packages.xml
cp /tmp/packages.xml /mnt/system/packages.xml

umount /mnt
mount -o ro $RDPART /mnt

if [ -e /mnt/$RDFILE ]
then
    echo "ramdisk /mnt/${RDFILE} found" >> $LOG

    mkdir /tmp/rd
    cd /tmp/rd 
    dd if=/mnt/$RDFILE bs=64 skip=1| gunzip -c |cpio -i
    if grep "ro.secure=1" default.prop 
    then
        mount -o remount,rw /mnt
        cp /mnt/$RDFILE /mnt/$RDFILE.bak
        sed -ie "s/ro.secure=1/ro.secure=0/g" default.prop
        find . -regex "./.*"| cpio -o -H newc | gzip > /tmp/ramdisk.gz
        cd /tmp
        mkimage -T ramdisk -C gzip -A arm \
            -d /tmp/ramdisk.gz /mnt/$RDFILE
        echo "successfully un-disabled adb" >> $LOG
    else
        echo "adb already enabled" >> $LOG
    fi
    umount /mnt
else
    echo "couldn't get at the ramdisk" >> $LOG
    exit 255
fi


mount $DATAPART /mnt
if [ -d /mnt/property ];
then
    echo "mounted ${DATAPART}" >> $LOG
    echo -n 1 > /mnt/property/persist.service.adb.enable
    umount /mnt
    echo "adbd enabled" >> $LOG
else
    echo "couldn't mount ${DATAPART} for prop change"
    exit 255
fi

rm -rf /tmp/rd /tmp/ramdisk.gz
