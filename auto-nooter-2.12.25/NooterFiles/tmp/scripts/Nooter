RDFILE=uRamdisk
RDPART=/dev/mmcblk1p1

SYSPART=/dev/mmcblk1p5
DATAPART=/dev/mmcblk1p6

NTRB=/dev/mmcblk0p1
NTR=/dev/mmcblk0p2

LOG=/tmp/nooter.log

mount $NTR /nootered
mount $SYSPART /mntsys
mount $DATAPART /mnt

chmod 4775 /mntsys/bin/su
chmod 755 /mntsys/xbin/*

cd /mntsys
sed -i '/nocheckin/d' build.prop
echo "ro.config.nocheckin=no" >> build.prop
sed -i 's/abi=armeabi$/abi=armeabi-v7a/' build.prop
sed -i '/cpu.abi2/d' build.prop
echo "ro.product.cpu.abi2=armeabi" >> build.prop
sed -i 's/^.*ro.build.fingerprint.*$/ro\.build\.fingerprint=verizon\/voles\/sholes\/sholes:2\.1-update1\/ESE81\/29593:user\/release-keys/' build.prop

cd /mnt/system
sed -i '/uid.system/,/perms/{/uid.system/b;/perms/b;d}' packages.xml
rm /system/app/YouTube.apk

umount /nootered
umount /mntsys
umount /mnt

mount -o ro $RDPART /mnt

if [ -e /mnt/$RDFILE ]
then
    echo "ramdisk /mnt/${RDFILE} found" >> $LOG

    mkdir /tmp/rd
    cd /tmp/rd 
    dd if=/mnt/$RDFILE bs=64 skip=1| gunzip -c |cpio -i
    if grep "ro.secure=1" default.prop 
    then
        mount -o remount,rw /mnt
        cp /mnt/$RDFILE /mnt/$RDFILE.bak
        sed -ie "s/ro.secure=1/ro.secure=0/g" default.prop
        find . -regex "./.*"| cpio -o -H newc | gzip > /tmp/ramdisk.gz
        cd /tmp
        mkimage -T ramdisk -C gzip -A arm \
            -d /tmp/ramdisk.gz /mnt/$RDFILE
        echo "successfully un-disabled adb" >> $LOG
    else
        echo "adb already enabled" >> $LOG
    fi
    umount /mnt
else
    echo "couldn't get at the ramdisk" >> $LOG
    exit 255
fi


mount $DATAPART /mnt
if [ -d /mnt/property ];
then
    echo "mounted ${DATAPART}" >> $LOG
    echo -n 1 > /mnt/property/persist.service.adb.enable
    umount /mnt
    echo "adbd enabled" >> $LOG
else
    echo "couldn't mount ${DATAPART} for prop change"
    exit 255
fi

rm -rf /tmp/rd /tmp/ramdisk.gz

echo 1 > /dev/watchdog
